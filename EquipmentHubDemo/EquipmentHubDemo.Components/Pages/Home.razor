@page "/"
@using System
@using System.Linq
@rendermode InteractiveWebAssembly
@namespace EquipmentHubDemo.Components.Pages

@inject ILiveMeasurementClient Measurements

<section class="page-intro">
    <h3 class="page-intro__title">Live Measurements (Debug)</h3>
    <p class="page-intro__subtitle text-muted">Charts update automatically as data arrives from the live cache.</p>
</section>

@if (!string.IsNullOrEmpty(error))
{
    <div class="alert alert-danger">@error</div>
}

<section class="status-section">
    <h3 class="status-section__title">System Health Overview</h3>
    <p class="status-section__subtitle text-muted">
        Monitoring and predictive maintenance pipelines run continuously. These summaries show the agent's latest telemetry and maintenance planning output.
    </p>

    @if (!string.IsNullOrEmpty(statusError))
    {
        <div class="alert alert-warning" role="status">@statusError</div>
    }
    else
    {
        var predictiveStatuses = GetPredictiveStatuses();
        var monitoringStatuses = GetMonitoringStatuses();

        <div class="status-panels">
            <article class="status-panel" aria-labelledby="predictive-panel-title">
                <header class="status-panel__header">
                    <h4 id="predictive-panel-title" class="status-panel__title">Predictive Maintenance</h4>
                    <span class="text-muted small">Autogenerated plans per instrument metric</span>
                </header>

                @if (predictiveStatuses.Count == 0)
                {
                    <p class="status-panel__empty text-muted">Predictive insights will appear as soon as diagnostic samples arrive.</p>
                }
                else
                {
                    <ul class="predictive-list" role="list">
                        @foreach (var status in predictiveStatuses)
                        {
                            <li class="predictive-list__item" role="listitem">
                                <div class="predictive-card">
                                    <header class="predictive-card__header">
                                        <h6 class="predictive-card__title">@status.InstrumentId<span class="predictive-card__metric">@status.Metric</span></h6>
                                        <span class="predictive-card__probability">@status.Insight.FailureProbability.ToString("P1") failure risk</span>
                                    </header>
                                    <dl class="predictive-card__details">
                                        <div class="predictive-card__detail">
                                            <dt>Last Insight</dt>
                                            <dd>@status.Insight.TimestampUtc.ToLocalTime().ToString("g")</dd>
                                        </div>
                                        <div class="predictive-card__detail">
                                            <dt>Mean ± σ</dt>
                                            <dd>@status.Insight.Mean.ToString("F2") ± @status.Insight.StandardDeviation.ToString("F2")</dd>
                                        </div>
                                        <div class="predictive-card__detail">
                                            <dt>Service</dt>
                                            <dd>
                                                <span class="predictive-card__plan-date">@status.ServicePlan.ScheduledFor.ToLocalTime().ToString("g")</span>
                                                <span class="predictive-card__plan-notes text-muted">@status.ServicePlan.Notes</span>
                                            </dd>
                                        </div>
                                        <div class="predictive-card__detail">
                                            <dt>Repair</dt>
                                            <dd>
                                                <span class="predictive-card__plan-date">@status.RepairPlan.ScheduledFor.ToLocalTime().ToString("g")</span>
                                                <span class="predictive-card__plan-notes text-muted">@status.RepairPlan.Notes</span>
                                            </dd>
                                        </div>
                                    </dl>
                                </div>
                            </li>
                        }
                    </ul>
                }
            </article>

            <article class="status-panel" aria-labelledby="monitoring-panel-title">
                <header class="status-panel__header">
                    <h4 id="monitoring-panel-title" class="status-panel__title">Monitoring Telemetry</h4>
                    <span class="text-muted small">Latest agent heartbeats and health checks</span>
                </header>

                @if (monitoringStatuses.Count == 0)
                {
                    <p class="status-panel__empty text-muted">Awaiting monitoring data from the agent…</p>
                }
                else
                {
                    <ul class="monitoring-list" role="list">
                        @foreach (var status in monitoringStatuses)
                        {
                            <li class="monitoring-list__item" role="listitem">
                                <div class="monitoring-card">
                                    <header class="monitoring-card__header">
                                        <h6 class="monitoring-card__title">@status.InstrumentId<span class="monitoring-card__metric">@status.Metric</span></h6>
                                        <span class="@GetHealthCss(status.Health)">@DescribeHealth(status.Health)</span>
                                    </header>
                                    <dl class="monitoring-card__details">
                                        <div class="monitoring-card__detail">
                                            <dt>Last value</dt>
                                            <dd>@(status.LastValue?.ToString("F2") ?? "n/a")</dd>
                                        </div>
                                        <div class="monitoring-card__detail">
                                            <dt>Observed</dt>
                                            <dd>@(status.LastObservedUtc?.ToLocalTime().ToString("g") ?? "n/a")</dd>
                                        </div>
                                        <div class="monitoring-card__detail">
                                            <dt>Freshness</dt>
                                            <dd>@FormatAge(status.Age)</dd>
                                        </div>
                                    </dl>
                                </div>
                            </li>
                        }
                    </ul>
                }
            </article>
        </div>
    }
</section>

@{
    var activeStreams = GetActiveStreams().ToList();
    var placeholderCount = Math.Max(0, MaxChartsDisplayed - activeStreams.Count);
}

<div class="chart-grid__wrapper">
    @if (activeStreams.Count == 0)
    {
        <div class="chart-grid__empty alert alert-info" role="status">
            Waiting for live data…
        </div>
    }
    else
    {
        <div class="chart-grid" role="list">
            @foreach (var stream in activeStreams)
            {
                <div class="chart-grid__cell" role="listitem">
                    <div class="chart-grid__card">
                        <h6 class="chart-grid__title text-muted">@stream.Key</h6>
                        <ChartIsland Points="stream.Points"
                                     Title="stream.Key" />
                    </div>
                </div>
            }

            @for (var i = 0; i < placeholderCount; i++)
            {
                <div class="chart-grid__cell" role="listitem">
                    <div class="chart-grid__card chart-grid__card--placeholder">
                        <div class="chart-grid__placeholder text-muted">
                            Awaiting stream…
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>
