@page "/"
@using Microsoft.AspNetCore.Components.Web
@rendermode InteractiveWebAssembly
@namespace EquipmentHubDemo.Components.Pages

@inject ILiveMeasurementClient Measurements

<h3>Live Measurements</h3>
<p class="text-muted">Agent → Broker → Filter/Store → Live cache → (WASM UI)</p>

@if (!string.IsNullOrEmpty(error))
{
    <div class="alert alert-danger">@error</div>
}

<div class="d-flex flex-column flex-lg-row gap-3 align-items-lg-center">
    <div class="flex-grow-1">
        <div class="d-flex flex-wrap align-items-center gap-3">
            @foreach (var key in AvailableKeys)
            {
                var checkboxId = CreateCheckboxId(key);
                <div class="form-check form-check-inline">
                    <input class="form-check-input"
                           type="checkbox"
                           id="@checkboxId"
                           checked="@IsSelected(key)"
                           @onchange="async e => await OnKeyToggledAsync(key, e)" />
                    <label class="form-check-label" for="@checkboxId">@key</label>
                </div>
            }
        </div>
    </div>

    <div class="d-flex align-items-center gap-2">
        <button class="btn btn-sm btn-primary" @onclick="ToggleAsync">@((running ? "Pause" : "Run"))</button>
        <span class="badge bg-primary text-wrap">Measurements received: @TotalReceived</span>
        <span class="text-muted small">Active buffer: @ActiveBufferCount</span>
    </div>
</div>

@if (!string.IsNullOrEmpty(selectionWarning))
{
    <div class="alert alert-warning mt-2" role="alert">@selectionWarning</div>
}

<div class="row row-cols-1 row-cols-md-2 row-cols-xl-3 g-4 mt-2">
    @foreach (var stream in GetActiveStreams())
    {
        <div class="col">
            <div class="card h-100">
                <div class="card-body">
                    <h6 class="card-title text-muted">@stream.Key</h6>
                    <ChartIsland Points="stream.Points"
                                 Title="stream.Key" />
                </div>
            </div>
        </div>
    }
</div>
